// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ToDo.Data;

#nullable disable

namespace ToDo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Identity.Model.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users", "idenaatity");
                });

            modelBuilder.Entity("ToDo.Models.Entities.Todo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDone")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Todos", "todo");
                });

            modelBuilder.Entity("ToDo.Models.Entities.TodoCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("TodoCategories", "todo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1916263-7022-4f8f-afaf-385074521efe"),
                            CreatedAt = new DateTime(2025, 6, 13, 12, 12, 53, 338, DateTimeKind.Utc).AddTicks(3056),
                            Name = "Work",
                            UpdatedAt = new DateTime(2025, 6, 13, 12, 12, 53, 338, DateTimeKind.Utc).AddTicks(3202),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("65104e88-8f0f-4e85-ad90-786104ad2b22"),
                            CreatedAt = new DateTime(2025, 6, 13, 12, 12, 53, 338, DateTimeKind.Utc).AddTicks(3431),
                            Name = "House",
                            UpdatedAt = new DateTime(2025, 6, 13, 12, 12, 53, 338, DateTimeKind.Utc).AddTicks(3432),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f98648b6-8d2c-499a-bc70-372ef54a9887"),
                            CreatedAt = new DateTime(2025, 6, 13, 12, 12, 53, 338, DateTimeKind.Utc).AddTicks(3434),
                            Name = "Pets",
                            UpdatedAt = new DateTime(2025, 6, 13, 12, 12, 53, 338, DateTimeKind.Utc).AddTicks(3434),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c811b26d-b48d-4eaa-8ef4-7693bea5cd7f"),
                            CreatedAt = new DateTime(2025, 6, 13, 12, 12, 53, 338, DateTimeKind.Utc).AddTicks(3435),
                            Name = "Others",
                            UpdatedAt = new DateTime(2025, 6, 13, 12, 12, 53, 338, DateTimeKind.Utc).AddTicks(3436),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("ToDo.Models.Entities.Todo", b =>
                {
                    b.HasOne("ToDo.Models.Entities.TodoCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
